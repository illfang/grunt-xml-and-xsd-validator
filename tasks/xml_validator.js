// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = function(grunt) {
    return grunt.registerMultiTask('xml_validator', 'Grunt plugin to validate XML files', function() {
      var DOMParser, checkValidity, fail, options, schema, xmllint;
      DOMParser = require('xmldom').DOMParser;
      xmllint = require('xmllint');
      fail = false;
      schema = null;
      checkValidity = function(f) {
        var doc, validation, xml;
        xml = grunt.file.read(f);
        doc = new DOMParser({
          locator: {},
          errorHandler: function(level, msg) {
            fail = true;
            return grunt.log.error(f + "\tnot valid");
          }
        }).parseFromString(xml, 'text/xml');
        if (!fail && schema) {
          validation = xmllint.validateXML({
            xml: doc,
            schema: schema
          });
          if (validation.errors) {
            fail = true;
            grunt.log.error(f + "\tnot well formed");
            validation.errors.forEach(function(e) {
              return grunt.log.error(f + "\t " + e);
            });
          }
        }
        if (!fail) {
          return doc;
        }
      };
      options = this.options({
        xsd: null
      });
      if (options.xsd) {
        schema = checkValidity(options.xsd);
      }
      this.filesSrc.forEach(checkValidity);
      if (fail) {
        return grunt.fail.warn('Some files are not valid');
      } else {
        return grunt.log.ok(this.filesSrc.length + ' files valid');
      }
    });
  };

}).call(this);
